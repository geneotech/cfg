set laststatus=0
set ignorecase
set clipboard=unnamedplus
set backupdir=/tmp
set undodir=/tmp
set swapfile
set dir=/tmp

set nobackup
set noswapfile
set noundofile

" When searching try to be smart about cases
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

" For regular expressions turn magic on
set magic

" Show matching brackets when text indicator is over them
set showmatch

" How many tenths of a second to blink when matching brackets
set mat=2

set tabstop=4

" Don't know why but somehow this makes indentation work normally
" (puts just one tab instead of two)
set shiftwidth=4

" Return to last edit position when opening files (You want this!)
autocmd BufReadPost *
     \ if line("'\"") > 0 && line("'\"") <= line("$") |
     \   exe "normal! g`\"" |
     \ endif
" Remember info about open buffers on close
set viminfo^=%

" Let the window's title be the filename
set title

" Let us see relative line numbers by default
set number relativenumber
" set number

" Let us only see the filename
set titlestring=%t%m
nmap <S-e> :!ranger<CR>

" If the current buffer has never been saved, it will have no name,
" call the file browser to save it, otherwise just save it.
command -nargs=0 -bar Update if &modified 
                           \|    if empty(bufname('%'))
                           \|        browse confirm write
                           \|    else
                           \|        confirm write
                           \|    endif
                           \|endif
"nnoremap <silent> <C-S> :<C-u>Update<CR>
"inoremap <c-s> <Esc>:Update<CR>

augroup myvimrc
    autocmd!
    autocmd QuickFixCmdPost [^l]* cwindow
    autocmd QuickFixCmdPost l*    lwindow
augroup END

map <F4> :execute "silent grep -srnw --binary-files=without-match --exclude-dir=.git $WORKSPACE -e " . expand("<cword>") . " " <bar> cwindow <bar> redraw!<CR>
colorscheme elflord
map <C-l> :execute "silent Glog" <bar> redraw!<CR>
map <C-s> :execute "Gstatus"<CR>
map <C-d> :execute "Gdiff"<CR>
map <C-C> :execute "Gcommit"<CR>
nmap <C-a> GVgg

highlight DiffAdd    cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffDelete cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffChange cterm=bold ctermfg=10 ctermbg=17 gui=none guifg=bg guibg=Red
highlight DiffText   cterm=bold ctermfg=10 ctermbg=88 gui=none guifg=bg guibg=Red
